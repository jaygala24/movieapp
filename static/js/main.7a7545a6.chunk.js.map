{"version":3,"sources":["components/Header.js","components/Search.js","components/MovieItem.js","components/Movie.js","components/MovieDetail.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","Fragment","className","href","defaultProps","Search","state","searchMovie","onSubmit","e","preventDefault","console","log","_this","getMovies","setState","target","elements","movie","value","onChange","this","bind","type","name","placeholder","errors","Component","MovieItem","getMovieID","localStorage","setItem","imdbID","getMovie","src","Poster","alt","Title","onClick","Movie","_this2","movieList","movies","map","components_MovieItem","key","MovieDetail","url","imdbRating","Genre","Released","Language","Director","Writer","Actors","Plot","App","axios","get","concat","res","movieID","getItem","data","components_Header","components_Search","components_Movie","components_MovieDetail","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a7545a6.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = props => {\r\n  let branding;\r\n  if (props) {\r\n    branding = props.branding;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <nav className=\"navbar navbar-dark justify-content-center\">\r\n        <a href=\"https://jaygala24.github.io/movieapp\" className=\"navbar-brand\">\r\n          <p className=\"display-4\">{branding}</p>\r\n        </a>\r\n      </nav>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'Movie App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    searchMovie: ''\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('Success');\r\n    this.props.getMovies(e);\r\n    this.setState({ searchMovie: e.target.elements.movie.value });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ searchMovie: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container my-5\">\r\n        <div className=\"jumbotron text-center\">\r\n          <h3 className=\"mb-4\">Search For Any Movie</h3>\r\n          <form onSubmit={this.onSubmit.bind(this)}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"movie\"\r\n              placeholder=\"Search any movie\"\r\n              value={this.state.searchMovie}\r\n              onChange={this.onChange}\r\n            />\r\n          </form>\r\n          {this.props.errors ? (\r\n            <p className=\"lead text-danger\">Please enter valid movie name</p>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearch.propTypes = {\r\n  getMovies: PropTypes.func.isRequired,\r\n  errors: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass MovieItem extends Component {\r\n  getMovieID = e => {\r\n    localStorage.setItem('id', this.props.movie.imdbID);\r\n    this.props.getMovie(e);\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    let movie = this.props.movie;\r\n\r\n    return (\r\n      <div className=\"col-12 col-sm-6 col-md-3\">\r\n        <div className=\"card text-center mb-2 mx-auto\">\r\n          <img className=\"card-img-top\" src={movie.Poster} alt=\"Movie Poster\" />\r\n          <div className=\"card-footer\">\r\n            <h5 className=\"card-title\">{movie.Title}</h5>\r\n            <a\r\n              href=\"/\"\r\n              onClick={this.getMovieID.bind(this)}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              More info\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMovieItem.propTypes = {\r\n  movie: PropTypes.object.isRequired\r\n};\r\n\r\nexport default MovieItem;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MovieItem from './MovieItem';\r\n\r\nclass Movie extends Component {\r\n  getMovieID = e => {\r\n    this.props.getMovie(e);\r\n  };\r\n\r\n  render() {\r\n    let movies = this.props.movies;\r\n    let movieList = movies.map(movie => (\r\n      <MovieItem\r\n        key={movie.imdbID}\r\n        movie={movie}\r\n        getMovie={this.getMovieID.bind(this)}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">{movieList}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMovie.propTypes = {\r\n  movies: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\n\r\nconst MovieDetail = props => {\r\n  let movie = props.movie;\r\n  let url = 'http://www.imdb.com/title/' + movie.imdbID;\r\n  let homepage = 'https://jaygala24.github.io/movieapp/';\r\n  return (\r\n    <div className=\"container text-white text-center\">\r\n      <h2>{movie.Title}</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-lg-4 mt-2\">\r\n          <img src={movie.Poster} className=\"thumbnail\" alt=\"Poster\" />\r\n        </div>\r\n        <div className=\"col-12 col-lg-8 mt-2\">\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">\r\n              <strong>IMDB Rating:</strong> {movie.imdbRating}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>Genre:</strong> {movie.Genre}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>Released:</strong> {movie.Released}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>Language:</strong> {movie.Language}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>Director:</strong> {movie.Director}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>Writer:</strong> {movie.Writer}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>Actors:</strong> {movie.Actors}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>Plot:</strong> {movie.Plot}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"row m-3\">\r\n        <div className=\"col-12\">\r\n          <a href={url} className=\"btn btn-primary mr-3\">\r\n            View IMDB\r\n          </a>\r\n          <a href={homepage} className=\"btn btn-primary\">\r\n            Go Back\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport Search from './components/Search';\nimport Movie from './components/Movie';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport MovieDetail from './components/MovieDetail';\n\nclass App extends Component {\n  state = {\n    movies: [],\n    movie: {},\n    errors: false\n  };\n\n  async getMovies(e) {\n    e.preventDefault();\n    const movie = e.target.elements.movie.value;\n    const res = await axios.get(\n      `https://www.omdbapi.com/?s=${movie}&apikey=3273255d`\n    );\n    if (res['data']['Response'] === 'True') {\n      const movies = res['data']['Search'];\n      this.setState({ movies: movies });\n    } else {\n      const { errors } = this.state;\n      this.setState({ errors: !errors });\n    }\n  }\n\n  async getMovie(e) {\n    const movieID = localStorage.getItem('id');\n    const res = await axios.get(\n      `https://www.omdbapi.com/?i=${movieID}&apikey=3273255d`\n    );\n    const data = {\n      data: res.data\n    };\n    this.setState({ movies: [], movie: data });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header branding=\"Movie Mania\" />\n        {this.state.movie['data'] ? null : (\n          <Search\n            getMovies={this.getMovies.bind(this)}\n            errors={this.state.errors}\n          />\n        )}\n        {this.state.movies ? (\n          <Movie\n            movies={this.state.movies}\n            getMovie={this.getMovie.bind(this)}\n          />\n        ) : null}\n        {this.state.movie['data'] ? (\n          <MovieDetail movie={this.state.movie['data']} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}